# -*- coding: utf-8 -*-
"""heart_disease_prediction.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1cvPn-ojgKIVpS21IanUNkCbH1osEw1Eb
"""

import numpy as np
import pandas as pd

"""data collection and pre-processing"""

heart_data= pd.read_csv('/content/heart.csv')
heart_data

heart_data.head() # shows first five rows of table

heart_data.describe

heart_data.isnull().sum()

heart_data.shape

heart_data['target'].value_counts()

"""seperating data & labels"""

X=heart_data.drop(columns='target',axis=1)
Y=heart_data['target']
print(X,Y)

"""training and testing of data

"""

from sklearn.model_selection import train_test_split

X_train,Y_test,Y_train,X_test= train_test_split(X,Y,test_size=0.2,stratify=Y,random_state=2)

print(X_train,Y_test,Y_train,X_test)

"""model selection"""

from sklearn.linear_model import LogisticRegression

model= LogisticRegression()

model.fit(X_train,Y_train)

from sklearn.metrics import accuracy_score

X_train_prediction=model.predict(X_train)
train_accuracy= accuracy_score(X_train_prediction,Y_train)
print(train_accuracy)

input_data=(53,1,0,140,203,1,0,155,1,3.1,0,0,3)
input_data_np= np.asarray(input_data)
input_data_reshape= input_data_np.reshape(1,-1)

prediction =model.predict(input_data_reshape)

print(prediction)
if prediction==0:
  print("the person has healthy heart")
else:
  print("the person has defective heart")